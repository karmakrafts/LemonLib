buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        mavenCentral()
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

plugins {
    id 'maven-publish'
}

apply plugin: 'net.minecraftforge.gradle'

version = "${mod_version}"
group = "onelemonyboi.${modid}" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "${modid}"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '17' // Need this here so eclipse task generates correctly.

minecraft {
    // The mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   Snapshot are built nightly.
    // stable_#            Stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: "official", version: "1.19.2"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            property 'mixin.env.disableRefMap', 'true'
            workingDirectory project.file('run')
            arg "-mixin.config="+archivesBaseName+".mixins.json"


            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                lemonlib {
                    source sourceSets.main
                }
            }
        }

        server {
            property 'mixin.env.disableRefMap', 'true'
            workingDirectory project.file('run')
            arg "-mixin.config="+archivesBaseName+".mixins.json"


            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                lemonlib {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            //property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'lemonlib', '--all', '--output', file('src/generated/resources/'), '--existing', sourceSets.main.resources.srcDirs[0]
            mods {
                lemonlib {
                    source sourceSets.main
                }
            }
        }

    }
}

repositories{
    maven {
        name = "CF"
        url = "https://minecraft.curseforge.com/api/maven/"
    }
    maven {
        name = "C4"
        url = "https://maven.theillusivec4.top/"
    }
    maven {
        name = "Cursemaven"
        url = "https://www.cursemaven.com/"
    }
    jcenter()
    mavenCentral()

}

dependencies {
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}" //21

    compileOnly "org.projectlombok:lombok:1.18.20"
    annotationProcessor "org.projectlombok:lombok:1.18.20"
}

sourceSets {
    main.resources.srcDirs += 'src/generated/resources'
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
                "Specification-Title"     : "${modid}",
                "Specification-Vendor"    : "onelemonyboi",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.version,
                "Implementation-Vendor"   : "onelemonyboi",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs": "${modid}.mixins.json"
        ])
    }
}

apply plugin: 'org.spongepowered.mixin'

mixin {
    add sourceSets.main, "${modid}.refmap.json"
}

jar.finalizedBy('reobfJar')

publishing {
    repositories {
        maven {
            url "https://maven.explodingcreeper.me/releases"
            credentials {
                username System.getenv("MAVEN_USER")
                password System.getenv("MAVEN_PASSWORD")
            }
        }
    }

    publications {
        maven(MavenPublication) {
            artifactId project.archivesBaseName
            from components.java

            pom.withXml {
                asNode().dependencies.dependency.each { dep ->
                    if (dep.groupId.last().value().last() in ["net.minecraftforge", "mezz.jei"]) {
                        assert dep.parent().remove(dep)
                    }
                }
            }
        }
    }
}